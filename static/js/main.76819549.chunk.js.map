{"version":3,"sources":["assets/images/chewing.gif","context/UserContext.js","components/Chat/MessageBox.js","containers/MessageBox.js","components/Chat/Messages.js","components/Chat/Users.js","components/Chat/AnnoyHeader.js","components/Annoy/Joke.js","components/Annoy/Annoy.js","containers/Annoy.js","components/Home/Home.js","containers/Home.js","components/Login/Login.js","containers/Login.js","App.js","serviceWorker.js","store/reducers/reducerLogin.js","sagas/index.js","sockets/index.js","index.js"],"names":["module","exports","__webpack_require__","p","React","createContext","user","MessageBox","props","sendMessage","annoyit","typing","_useState","useState","focus","msg","sent","_useState2","Object","slicedToArray","state","setState","react_default","a","createElement","className","onSubmit","sendmessage","autoComplete","type","name","placeholder","onFocus","onBlur","onKeyDown","e","keyCode","preventDefault","message","target","value","sender","onChange","event","objectSpread","split","length","setTimeout","concat","connect","dispatch","payload","MessageBoxComp","Messages","messages","map","item","index","key","Users","users","AnnoyHeader","logout","onClick","API","useDad","data","setData","_fetchJoke","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","headers","Accept","json","stop","apply","this","arguments","useEffect","fetchJoke","Joke","_useDad","_useDad2","console","log","joke","Annoy","annoys","typingusers","table","Annoy_Joke","src","chewing","annoy","rLogin","AnnoyComp","Home","addUser","userExit","_useContext","useContext","UserContext","setUser","Chat_AnnoyHeader","Chat_Users","Chat_Messages","containers_Annoy","containers_MessageBox","HomeComp","Login","username","useRef","_useReducer","useReducer","action","loading","error_msg","user_name","error","pass","loggedin","_useReducer2","handleNext","nme","find","toLowerCase","localStorage","setItem","getItem","current","containers_Home","Fragment","ref","handleEnter","onNext","id","cancel","onLogin","focusme","blurme","LoginComp","App","_this","removeItem","Provider","containers_Login","Component","Boolean","window","location","hostname","match","initialState","reducerLogin","undefined","newState","splice","indexOf","showpassAsync","blurupdate","put","delay","_marked","_context2","_marked2","handleApp","params","_context3","takeLatest","takeEvery","webS","waitForConnection","send","JSON","stringify","setupSocket","socket","WebSocket","onopen","onmessage","parse","onclose","onerror","err","sendAction","timeout","readyState","clearTimeout","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","store","createStore","applyMiddleware","Socket","run","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76819549.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chewing.6238423a.gif\";","import React from 'react';\r\n\r\nexport default React.createContext({\r\n    user : ''\r\n})","import React, { useState } from 'react';\r\nimport InputElem from '../InputElem';\r\nimport './chat.css'\r\n\r\nconst MessageBox = (props) => {\r\n    const { user, sendMessage, annoyit, typing } = props;\r\n    const [state, setState] = useState({ focus : false, msg : '', sent: false });\r\n    const sendmessage = (e) => {\r\n        \r\n        if (e.keyCode === 13) {\r\n            e.preventDefault();\r\n            debugger;\r\n            sendMessage({ message: e.target.value, sender: user});\r\n            e.target.value = '';\r\n        }\r\n        else {\r\n\r\n        } \r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        typing(user)\r\n        const msg = event.target.value;\r\n        setState({...state, msg : msg})\r\n        //sendMessage({ message: state.msg, sender: user});\r\n        if (msg.split(' ').length >= 2){     \r\n            if (!state.sent) {      \r\n                setTimeout(() => {\r\n                    annoyit(`${user} is thinking a lot on sending this - \"${msg}\" :D`);\r\n                    setState({...state, sent: true})\r\n                }, 1000)\r\n            }        \r\n        }\r\n        \r\n       \r\n    }\r\n    return (\r\n        <div className=\"msg-box\">\r\n                <form onSubmit={props.sendmessage}>\r\n                    <fieldset className=\"\">\r\n                        {state.focus\r\n                            ?<legend>Message</legend>\r\n                            :null\r\n                        }                        \r\n                        <input autoComplete=\"off\" type=\"text\" name=\"message-box\" placeholder={!(state.focus)?\"Enter Message and hit Enter\":null} onFocus={() => setState({focus : true})} \r\n                        onBlur={() => setState({focus : false})} onKeyDown={(e) => sendmessage(e)} value={state.msg} onChange={handleChange}/>\r\n                        {/* <InputElem elid=\"username\" placeholder=\"Enter message and press Enter\" focusme={props.focusme} \r\n                        blurme={props.blurme} eltype=\"text\" loading={props.loading} focus={props.focus} \r\n                        fieldname=\"message-input\"/>                                        */}\r\n                    </fieldset>\r\n                    {/* <div className=\"grid-container-2 login-links\">\r\n                        <span className=\"action-btn\"><button onClick={(e) => {e.preventDefault();props.sendmessage()}}>Send</button></span>\r\n                    </div> */}\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageBox;","import { connect } from 'react-redux';\r\nimport MessageBoxComp from '../components/Chat/MessageBox';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage : (payload) => dispatch({type: 'NEW_MESSAGE', payload : payload }),\r\n        annoyit : (msg) => dispatch({type: 'ANNOY', msg}),\r\n        typing: (user) => dispatch({type : 'TYPING', user})\r\n    }\r\n}\r\n\r\nconst MessageBox = connect(mapStateToProps, mapDispatchToProps)(MessageBoxComp);\r\n\r\nexport default MessageBox;","import React from 'react';\r\n\r\nconst Messages = (props) => {\r\n    const { messages } = props;\r\n    return (\r\n        <div className=\"messages\">\r\n            <ul>\r\n            {\r\n                messages.map((item, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <span><b>{item.sender}</b> : </span>\r\n                            <span><i>{item.message}</i></span>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\n\r\nconst Users = (props) => {\r\n    const { users } = props;\r\n    return (\r\n        <div className=\"users\">\r\n            <ul>\r\n            {\r\n                users.map((item, index) => {\r\n                    return (\r\n                        <li key={index}>\r\n                            <span><b>{item.name}</b></span>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","import React, { useContext } from 'react';\r\n\r\n\r\nconst AnnoyHeader = (props) => {\r\n    const { user, logout } = props;\r\n    \r\n    return (\r\n        <header>            \r\n            <span><b>Hello <i>{user}</i></b> </span>\r\n            <button onClick={logout}>Logout</button>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AnnoyHeader;","import React, { useEffect, useState } from 'react';\r\n\r\nconst API = 'https://icanhazdadjoke.com/';\r\nconst useDad = () => {\r\n    const [data, setData] = useState({});    \r\n    async function fetchJoke() {\r\n        const res = await fetch(API, {\r\n            headers : {\r\n                Accept : 'application/json'\r\n            }\r\n        });\r\n        const data = await res.json();\r\n        setData(data);\r\n    }\r\n    useEffect(() => {\r\n        fetchJoke();\r\n    }, [])\r\n    return [data, setData];\r\n}\r\n\r\nconst Joke = (props) => {\r\n    const [data, setData] = useDad();\r\n    console.log(data);\r\n   \r\n    return (\r\n        <div>\r\n            <p><b><i>{data.joke}</i></b></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Joke;","import React, {useEffect} from 'react';\r\nimport './annoy.css';\r\nimport chewing from '../../assets/images/chewing.gif';\r\nimport Joke from './Joke';\r\n\r\n\r\nconst Annoy = (props) => {\r\n    const { annoys, typingusers } = props;\r\n    useEffect(() => {\r\n        console.table(typingusers);\r\n    })\r\n    \r\n    return (\r\n        <div className=\"annoy-section\">\r\n            <h4>A N N O Y S</h4>\r\n            <Joke />\r\n            <span className=\"annoy-logo\"><img src={chewing} /></span>\r\n            \r\n            <h5>ROFL</h5>\r\n            <ul>\r\n            {\r\n                annoys.map(annoy => {\r\n                    return (\r\n                        <li><i>{annoy}</i></li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n            <h5>Typists</h5>\r\n            <ul>\r\n            {\r\n                typingusers.map(user => {\r\n                    return (\r\n                        <li><i>{user} is typing ...</i></li>\r\n                    )\r\n                })\r\n            }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Annoy;","import { connect } from 'react-redux';\r\nimport AnnoyComp from '../components/Annoy'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        annoys : state.rLogin.annoys,\r\n        typingusers: state.rLogin.typingusers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst Annoy = connect(mapStateToProps, mapDispatchToProps)(AnnoyComp);\r\nexport default Annoy;","import React, { useContext, useEffect } from 'react';\r\nimport './home.css';\r\nimport UserContext from '../../context/UserContext';\r\nimport InputElem from '../InputElem';\r\nimport MessageBox from '../../containers/MessageBox';\r\nimport Messages from '../Chat/Messages';\r\nimport Users from '../Chat/Users';\r\nimport AnnoyHeader from '../Chat/AnnoyHeader';\r\nimport Annoy from '../../containers/Annoy'\r\n\r\nconst Home = (props) => {\r\n    const { messages, addUser, users, userExit } = props;\r\n    const { user, setUser } = useContext(UserContext)\r\n\r\n    const sendmessage = () => {\r\n        debugger;\r\n    }\r\n\r\n    useEffect(() => {\r\n        addUser(user);\r\n    }, [])\r\n    debugger;\r\n\r\n    const logout = () => {\r\n        userExit(user);\r\n        setUser('')\r\n    }\r\n    return (\r\n        <section className=\"annoy-container\">\r\n            <AnnoyHeader logout={logout} user={user}/>\r\n            <Users users={users}/>\r\n            <Messages messages={messages} />\r\n            <Annoy />\r\n            <MessageBox user={user}/>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Home;","import { connect } from 'react-redux';\r\nimport HomeComp from '../components/Home'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages : state.rLogin.messages,\r\n        users : state.rLogin.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addUser : (user) => dispatch({type:'NEW_USER', user}),\r\n        sendmessage : (e) => dispatch({type : 'NEW_MESSAGE', payload : { message : e}}),\r\n        userExit : (user) => dispatch({type : 'USER_EXIT', user})\r\n    }\r\n}\r\n\r\nconst Home = connect(mapStateToProps, mapDispatchToProps)(HomeComp)\r\n\r\nexport default Home;","import React, { useState, useReducer, useContext, useRef, useEffect } from 'react';\r\n// import loginWrapper from './../HOC/loginWrapper';\r\nimport Home from '../../containers/Home';\r\n// import { Link } from 'react-router-dom';\r\nimport './login.css'\r\nimport UserContext from '../../context/UserContext'\r\nimport InputElem from '../InputElem';\r\nimport chewing from '../../assets/images/chewing.gif'\r\n\r\nconst Login = (props) => {\r\n        const { user, setUser } = useContext(UserContext);\r\n        \r\n        const username = useRef('');\r\n        \r\n        const loginreducer = (state, action) => {\r\n            switch (action.type) {\r\n                case 'loading':\r\n                    debugger;\r\n                    return {...state, loading: true, error_msg: '' }\r\n                case 'setUsername':\r\n                    return {...state, user_name : action.username, error_msg: '' }\r\n                case 'error': \r\n                    return {...state, error_msg: action.error}\r\n                default:\r\n                    return state;\r\n            }\r\n        }\r\n        const [state, dispatch] = useReducer(loginreducer, {\r\n            pass : false,\r\n            loggedin : false,\r\n            loading : false,\r\n            user_name : '',\r\n            error_msg: ''\r\n        });\r\n        console.log('abi', state);\r\n        const { pass, loggedin, loading, user_name, error_msg } = state;\r\n        const { users } = props;\r\n\r\n        const handleNext = (nme) => {\r\n            if (nme && nme.length >= 2) {\r\n                debugger;\r\n                let chkname = users.find(item => item.name.toLowerCase() === nme.toLowerCase())   \r\n                if (!chkname)  {         \r\n                    dispatch({type: 'loading'})\r\n                    setUser(nme);\r\n                    localStorage.setItem('annoy_name', nme)\r\n                }\r\n                else {\r\n                    dispatch({type: 'error', error : 'Name Taken !'})        \r\n                }\r\n            }\r\n            else {\r\n                dispatch({type: 'error', error : 'Insufficient Length !'})  \r\n            }\r\n        }\r\n        useEffect(() => {\r\n            if (localStorage.getItem('annoy_name')) {\r\n                handleNext(localStorage.getItem('annoy_name'))\r\n            }\r\n            else {           \r\n                username.current.focus(); \r\n            }  \r\n        }, [])\r\n\r\n        const handleEnter = (e) => {\r\n            if (e.keyCode === 13) {\r\n                handleNext(username.current.value)                \r\n            }\r\n        }\r\n        //let { user_name, setUsername} = useState(username);\r\n        const handleNameCheck = (event) => {\r\n            dispatch({type: 'setUsername', username : username.current.value});\r\n            let chkname = users.find(item => item.name.toLowerCase() === username.current.value.toLowerCase())   \r\n            if (chkname)  {         \r\n                dispatch({type: 'error', error : 'Name Taken !'})        \r\n            }                \r\n        }\r\n\r\n        \r\n        if (user) {\r\n            return (\r\n                <Home  />\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                \r\n                        <>\r\n                            <span className=\"annoy-logo\"><img src={chewing} /></span>\r\n                            <fieldset className=\"login\">\r\n                                <legend>Name</legend>\r\n                                <input type=\"text\" name=\"username\" autoComplete=\"off\" ref={username} onKeyDown={(e) => handleEnter(e)} \r\n                                value={user_name} onChange={handleNameCheck}\r\n                                />              \r\n                            </fieldset>\r\n                            <span className=\"login-error\">{error_msg}</span>                            \r\n                            <div className=\"grid-container-2 login-links\">\r\n                                <span className=\"action-btn\"><button onClick={() => handleNext(username.current.value)}>Annoy Me</button></span>\r\n                            </div>\r\n                        </>\r\n\r\n                \r\n            )\r\n        }\r\n        \r\n    }\r\n\r\nexport default Login;","import { connect } from 'react-redux';\r\nimport LoginComp from '../components/Login'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users : state.rLogin.users\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // onNext : (id) => dispatch(actionCreator.showpass(id)), //this is using redux-thunk\r\n        onNext: (id) => dispatch({type : 'showpass', id : id}),\r\n        cancel : () => dispatch({type : 'cancel'}),\r\n        onLogin : () => dispatch({type : 'login'}),\r\n        focusme : (event) => dispatch({type : 'focus', id : event.target.id}),\r\n        blurme : () => dispatch({type : 'blur'}),\r\n    }\r\n}\r\n\r\nconst Login = connect(mapStateToProps, mapDispatchToProps)(LoginComp)\r\n\r\nexport default Login;","import React, { Component } from 'react';\nimport './App.css';\nimport Login from './containers/Login';\nimport UserContext from './context/UserContext'\n\nclass App extends Component {\n  state = {\n    user : '',\n  }\n  setUser = (user) => {\n    this.setState({\n      user : user\n    }) \n    if (!user) {\n      localStorage.removeItem('annoy_name')\n    }\n  }\n  render() {\n    return (\n      <UserContext.Provider value={{user : this.state.user, setUser : this.setUser}}>\n        <div className=\"App\">      \n          <Login />      \n        </div>\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n    users : [],\r\n    messages : [],\r\n    annoys : [],\r\n    typingusers : []\r\n}\r\n\r\nconst reducerLogin = (state = initialState, action) => {\r\n    const newState = {...state}\r\n    switch (action.type) {\r\n        case 'SHOW_MESSAGE':\r\n        debugger;\r\n            newState.typingusers.splice(newState.typingusers.indexOf(action.data.sender), 1)\r\n            console.log('NEW', newState.typingusers)\r\n            return {...newState, messages : newState.messages.concat([{message : action.data.message, sender : action.data.sender}]), typingusers : []}\r\n        case 'SHOW_USERS' : \r\n            return {...newState, users : action.data.users}\r\n        case 'reset' : \r\n            return {...newState, messages : []}\r\n        case 'ANNOY_HEM':\r\n            return {...newState, annoys: newState.annoys.concat([action.data.msg])}\r\n        case 'TYPING_MSG':\r\n        debugger;\r\n            let finduser = newState.typingusers.indexOf(action.data.user);\r\n            return (finduser === -1)? {...newState, typingusers : newState.typingusers.concat([action.data.user])}:{...newState}\r\n        default: \r\n            return newState;\r\n    }    \r\n}\r\n\r\nexport default reducerLogin;","import { takeEvery, takeLatest, put, delay, cancel } from 'redux-saga/effects';\r\n\r\nfunction* showpassAsync(props) {\r\n    // if (props.id) {\r\n    //     yield cancel({type : 'blurme'})\r\n    // }\r\n    // yield put({type : 'blurme'})\r\n    // yield cancel({type : 'blurme'})\r\n    yield put({type : 'loading'})\r\n    yield delay(500);\r\n    yield put({type : 'showpassfield', id : props.id})\r\n}\r\n\r\nfunction* blurupdate(props) {\r\n    yield put({type : 'blurme'})\r\n}\r\n\r\nexport const handleApp = function* (params) {\r\n    yield takeLatest('blur', blurupdate)\r\n    yield takeLatest('showpass', showpassAsync)\r\n    yield takeEvery('NEW_MESSAGE', action => {\r\n        params.webS.waitForConnection(() => params.webS.send(JSON.stringify({type : 'NEW_MESSAGE', data : {message : action.payload.message, sender : action.payload.sender}})))   \r\n    })\r\n    yield takeEvery('NEW_USER', action => {\r\n        params.webS.waitForConnection(() => params.webS.send(JSON.stringify(action)));\r\n    })\r\n\r\n    yield takeEvery('USER_EXIT', action => {\r\n        params.webS.waitForConnection(() => params.webS.send(JSON.stringify(action)));\r\n        params.dispatch({type : 'reset'})\r\n    })\r\n\r\n    yield takeLatest('ANNOY', action => {\r\n        params.webS.waitForConnection(() => params.webS.send(JSON.stringify(action)));\r\n    })\r\n\r\n    yield takeLatest('TYPING', action => {\r\n        params.webS.waitForConnection(() => params.webS.send(JSON.stringify(action)));\r\n    })\r\n}","\r\nconst setupSocket = (dispatch, username) => {\r\n    const socket = new WebSocket('ws://localhost:8989');\r\n    socket.onopen = () => {\r\n        console.log('Connection is open my boy!', socket);\r\n    }\r\n    socket.onmessage = (event) => {      \r\n        debugger; \r\n        console.log('YOU HAVE A MESSAGE MY BOY ');        \r\n        let data = JSON.parse(event.data);\r\n        console.table('MESSAGE_RECEIVED', data);\r\n        switch(data.type) {\r\n            case 'USERS_LIST':\r\n                dispatch({type : 'SHOW_USERS', data: data})\r\n                break;\r\n            case 'NEW_MESSAGE':\r\n                dispatch({type: 'SHOW_MESSAGE', data : data})\r\n                break;\r\n            case 'ANNOY':\r\n                dispatch({type: 'ANNOY_HEM', data: data})\r\n            case 'TYPING':\r\n                dispatch({type: 'TYPING_MSG', data: data})\r\n            default :\r\n        }\r\n    }\r\n\r\n    socket.onclose = () => {\r\n        console.log('Connection is C L O S E D my boy!')\r\n    }\r\n\r\n    socket.onerror = (err) => {\r\n        console.log('E R R O R !!!')\r\n        console.error(err)\r\n    }\r\n\r\n    socket.waitForConnection= function(sendAction) {\r\n        let timeout;\r\n        if (this.readyState === 1) {\r\n            console.log('Connecting nOWWW ....')\r\n            clearTimeout(timeout)\r\n            sendAction();\r\n        }\r\n        else {\r\n            timeout = setTimeout(() => {\r\n                console.log('Checking Again ....')\r\n                this.waitForConnection(sendAction)\r\n            }, 1000);\r\n        }\r\n    }\r\n    return socket;\r\n}\r\n\r\nexport default setupSocket;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reducerLogin from './store/reducers/reducerLogin';\nimport createSagaMiddleware from 'redux-saga';\nimport {handleApp} from './sagas';\nimport Socket from './sockets'\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = combineReducers({\n    rLogin : reducerLogin\n})\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\nconst webS = Socket(store.dispatch);\nsagaMiddleware.run(handleApp, {webS, dispatch : store.dispatch})\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}